{"ast":null,"code":"import{useState,useEffect}from\"react\";import{AiOutlineArrowRight}from\"react-icons/ai\";import Change_user from\"./change_user\";import Form from\"react-bootstrap/Form\";import Button from\"react-bootstrap/Button\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function User_card(props){const[name,SetName]=useState(props.user_name);const[image_url,SetImage_url]=useState(props.icons);const[nameError,SetNameError]=useState(\"\");const[state,Setstate]=useState(\"\");const[totalScore,setTotalScore]=useState(0);// 特定日付以降の合計スコア\nconst targetDate=\"2024-09-21\";// 特定の日付（例：2024年9月20日以降）\nconst update_handler=()=>{console.log(\"update_handler\");console.log(name);console.log(image_url);if(nameError==false){props.cont.update_user_data(name,image_url);}else{Setstate(false);}};// 特定の日以降のスコアを計算する関数\nconst calculateTotalScoreForSpecificPeriod=(targetDate,answers)=>{let total=0;const target=new Date(targetDate);// 絞り込み対象の日付\nanswers.forEach(answer=>{const answerDate=new Date(answer.answer_time*1000);// UNIXタイムスタンプを通常の時間に変換\n// 特定の日付以降の回答のみを合計\nif(answerDate>=target){total+=answer.reward;// 獲得スコアを合計\n}});return total;};const handle_SetName=event=>{const value=event.target.value;SetName(value);// 電話番号の正規表現パターン\nconst phonePattern=/^\\d{2}[a-zA-Z]\\d{4}$/;// 入力値が正規表現にマッチしない場合は、エラーメッセージを設定\nif(!phonePattern.test(value)){SetNameError(true);console.log(\"errr\");}else{SetNameError(false);}};// クイズデータを取得してスコアを計算する関数\nconst fetchAndCalculateScore=async()=>{try{// スマートコントラクトから全ての回答データを一括取得\nconst answers=await props.cont.methods.get_all_answers().call();const total=calculateTotalScoreForSpecificPeriod(targetDate,answers);// 日付で絞り込んで合計\nsetTotalScore(total);// 合計スコアを状態に保存\n}catch(error){console.error(\"Error fetching quiz data:\",error);}};//初回のみ実行\nuseEffect(()=>{console.log(\"初回のみ実行\");console.log(props.state);console.log(props.user_name);console.log(props.icons);Setstate(props.state);fetchAndCalculateScore();},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"user_card\",children:[/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:()=>props.cont.add_token_wallet(),style:{position:\"absolute\",top:0,left:0},children:\"\\u30C8\\u30FC\\u30AF\\u30F3\\u3092wallet\\u306B\\u8FFD\\u52A0\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"address\",style:{\"margin-top\":\"50px\"},children:[props.address.slice(0,20),\"....\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",style:{marginTop:\"20px\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col token d-flex flex-column\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"\\u4FDD\\u6709\\u30C8\\u30FC\\u30AF\\u30F3\"}),/*#__PURE__*/_jsxs(\"div\",{children:[props.token,\"FLT\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col token-result d-flex flex-column\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"\\u73FE\\u5728\\u306E\\u9806\\u4F4D\"}),/*#__PURE__*/_jsxs(\"div\",{children:[props.num_of_student,\"\\u4EBA\\u4E2D\",props.rank,\"\\u4F4D\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col token-result d-flex flex-column\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"2024\\u5E749\\u670820\\u65E5\\u4EE5\\u964D\\u306E\\u7372\\u5F97\\u70B9\\u6570\"}),/*#__PURE__*/_jsxs(\"div\",{children:[totalScore/20,\"\\u70B9\"]}),\" \"]})]})]})});}export default User_card;","map":{"version":3,"names":["useState","useEffect","AiOutlineArrowRight","Change_user","Form","Button","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","User_card","props","name","SetName","user_name","image_url","SetImage_url","icons","nameError","SetNameError","state","Setstate","totalScore","setTotalScore","targetDate","update_handler","console","log","cont","update_user_data","calculateTotalScoreForSpecificPeriod","answers","total","target","Date","forEach","answer","answerDate","answer_time","reward","handle_SetName","event","value","phonePattern","test","fetchAndCalculateScore","methods","get_all_answers","call","error","children","className","variant","onClick","add_token_wallet","style","position","top","left","address","slice","marginTop","token","num_of_student","rank"],"sources":["/Users/toji.inoue/Desktop/卒業研究_井上登司フォルダ/web3-sotuken/src/pages/user_page/component/user_card.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\nimport Change_user from \"./change_user\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction User_card(props) {\n    const [name, SetName] = useState(props.user_name);\n    const [image_url, SetImage_url] = useState(props.icons);\n    const [nameError, SetNameError] = useState(\"\");\n    const [state, Setstate] = useState(\"\");\n    const [totalScore, setTotalScore] = useState(0); // 特定日付以降の合計スコア\n    const targetDate = \"2024-09-21\"; // 特定の日付（例：2024年9月20日以降）\n\n    const update_handler = () => {\n        console.log(\"update_handler\");\n        console.log(name);\n        console.log(image_url);\n        if (nameError == false) {\n            props.cont.update_user_data(name, image_url);\n        } else {\n            Setstate(false);\n        }\n    };\n    \n    // 特定の日以降のスコアを計算する関数\n    const calculateTotalScoreForSpecificPeriod = (targetDate, answers) => {\n        let total = 0;\n        const target = new Date(targetDate); // 絞り込み対象の日付\n        answers.forEach((answer) => {\n            const answerDate = new Date(answer.answer_time * 1000); // UNIXタイムスタンプを通常の時間に変換\n\n            // 特定の日付以降の回答のみを合計\n            if (answerDate >= target) {\n                total += answer.reward; // 獲得スコアを合計\n            }\n        });\n        return total;\n    };\n    \n    const handle_SetName = (event) => {\n        const value = event.target.value;\n        SetName(value);\n\n        // 電話番号の正規表現パターン\n        const phonePattern = /^\\d{2}[a-zA-Z]\\d{4}$/;\n\n        // 入力値が正規表現にマッチしない場合は、エラーメッセージを設定\n        if (!phonePattern.test(value)) {\n            SetNameError(true);\n            console.log(\"errr\");\n        } else {\n            SetNameError(false);\n        }\n    };\n\n    // クイズデータを取得してスコアを計算する関数\n    const fetchAndCalculateScore = async () => {\n        try {\n            // スマートコントラクトから全ての回答データを一括取得\n            const answers = await props.cont.methods.get_all_answers().call(); \n            const total = calculateTotalScoreForSpecificPeriod(targetDate, answers); // 日付で絞り込んで合計\n            setTotalScore(total); // 合計スコアを状態に保存\n        } catch (error) {\n            console.error(\"Error fetching quiz data:\", error);\n        }\n    };\n\n    //初回のみ実行\n    useEffect(() => {\n        console.log(\"初回のみ実行\");\n        console.log(props.state);\n        console.log(props.user_name);\n        console.log(props.icons);\n        Setstate(props.state);\n        fetchAndCalculateScore();\n    }, []);\n    return (\n        <>\n            <div className=\"user_card\">\n                <Button variant=\"primary\" onClick={() => props.cont.add_token_wallet()} style={{ position: \"absolute\", top: 0, left: 0 }}>\n                    トークンをwalletに追加\n                </Button>\n                <div className=\"address\" style={{ \"margin-top\": \"50px\" }}>\n                    {props.address.slice(0, 20)}....\n                </div>\n\n                {/* マージンを設定 */}\n                <div className=\"row\" style={{ marginTop: \"20px\" }}>\n                    <div className=\"col token d-flex flex-column\">\n                        <div>保有トークン</div>\n                        <div>{props.token}FLT</div>\n                    </div>\n                    <div className=\"col token-result d-flex flex-column\">\n                        <div>現在の順位</div>\n                        <div>{props.num_of_student}人中{props.rank}位</div>\n                    </div>\n                    <div className=\"col token-result d-flex flex-column\">\n                        <div>2024年9月20日以降の獲得点数</div>\n                        <div>{totalScore/20}点</div> {/* 特定日付以降の合計点数を表示 */}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default User_card;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,OAASC,mBAAmB,KAAQ,gBAAgB,CACpD,MAAO,CAAAC,WAAW,KAAM,eAAe,CAEvC,MAAO,CAAAC,IAAI,KAAM,sBAAsB,CACvC,MAAO,CAAAC,MAAM,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE5C,QAAS,CAAAC,SAASA,CAACC,KAAK,CAAE,CACtB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAACa,KAAK,CAACG,SAAS,CAAC,CACjD,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGlB,QAAQ,CAACa,KAAK,CAACM,KAAK,CAAC,CACvD,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACsB,KAAK,CAAEC,QAAQ,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACwB,UAAU,CAAEC,aAAa,CAAC,CAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAE;AACjD,KAAM,CAAA0B,UAAU,CAAG,YAAY,CAAE;AAEjC,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CACzBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAC7BD,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC,CACjBc,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC,CACtB,GAAIG,SAAS,EAAI,KAAK,CAAE,CACpBP,KAAK,CAACiB,IAAI,CAACC,gBAAgB,CAACjB,IAAI,CAAEG,SAAS,CAAC,CAChD,CAAC,IAAM,CACHM,QAAQ,CAAC,KAAK,CAAC,CACnB,CACJ,CAAC,CAED;AACA,KAAM,CAAAS,oCAAoC,CAAGA,CAACN,UAAU,CAAEO,OAAO,GAAK,CAClE,GAAI,CAAAC,KAAK,CAAG,CAAC,CACb,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,IAAI,CAACV,UAAU,CAAC,CAAE;AACrCO,OAAO,CAACI,OAAO,CAAEC,MAAM,EAAK,CACxB,KAAM,CAAAC,UAAU,CAAG,GAAI,CAAAH,IAAI,CAACE,MAAM,CAACE,WAAW,CAAG,IAAI,CAAC,CAAE;AAExD;AACA,GAAID,UAAU,EAAIJ,MAAM,CAAE,CACtBD,KAAK,EAAII,MAAM,CAACG,MAAM,CAAE;AAC5B,CACJ,CAAC,CAAC,CACF,MAAO,CAAAP,KAAK,CAChB,CAAC,CAED,KAAM,CAAAQ,cAAc,CAAIC,KAAK,EAAK,CAC9B,KAAM,CAAAC,KAAK,CAAGD,KAAK,CAACR,MAAM,CAACS,KAAK,CAChC7B,OAAO,CAAC6B,KAAK,CAAC,CAEd;AACA,KAAM,CAAAC,YAAY,CAAG,sBAAsB,CAE3C;AACA,GAAI,CAACA,YAAY,CAACC,IAAI,CAACF,KAAK,CAAC,CAAE,CAC3BvB,YAAY,CAAC,IAAI,CAAC,CAClBO,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,CACvB,CAAC,IAAM,CACHR,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAED;AACA,KAAM,CAAA0B,sBAAsB,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CACA;AACA,KAAM,CAAAd,OAAO,CAAG,KAAM,CAAApB,KAAK,CAACiB,IAAI,CAACkB,OAAO,CAACC,eAAe,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CACjE,KAAM,CAAAhB,KAAK,CAAGF,oCAAoC,CAACN,UAAU,CAAEO,OAAO,CAAC,CAAE;AACzER,aAAa,CAACS,KAAK,CAAC,CAAE;AAC1B,CAAE,MAAOiB,KAAK,CAAE,CACZvB,OAAO,CAACuB,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACrD,CACJ,CAAC,CAED;AACAlD,SAAS,CAAC,IAAM,CACZ2B,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CACrBD,OAAO,CAACC,GAAG,CAAChB,KAAK,CAACS,KAAK,CAAC,CACxBM,OAAO,CAACC,GAAG,CAAChB,KAAK,CAACG,SAAS,CAAC,CAC5BY,OAAO,CAACC,GAAG,CAAChB,KAAK,CAACM,KAAK,CAAC,CACxBI,QAAQ,CAACV,KAAK,CAACS,KAAK,CAAC,CACrByB,sBAAsB,CAAC,CAAC,CAC5B,CAAC,CAAE,EAAE,CAAC,CACN,mBACIxC,IAAA,CAAAI,SAAA,EAAAyC,QAAA,cACI3C,KAAA,QAAK4C,SAAS,CAAC,WAAW,CAAAD,QAAA,eACtB7C,IAAA,CAACF,MAAM,EAACiD,OAAO,CAAC,SAAS,CAACC,OAAO,CAAEA,CAAA,GAAM1C,KAAK,CAACiB,IAAI,CAAC0B,gBAAgB,CAAC,CAAE,CAACC,KAAK,CAAE,CAAEC,QAAQ,CAAE,UAAU,CAAEC,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAE,CAAE,CAAAR,QAAA,CAAC,wDAE1H,CAAQ,CAAC,cACT3C,KAAA,QAAK4C,SAAS,CAAC,SAAS,CAACI,KAAK,CAAE,CAAE,YAAY,CAAE,MAAO,CAAE,CAAAL,QAAA,EACpDvC,KAAK,CAACgD,OAAO,CAACC,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,MAChC,EAAK,CAAC,cAGNrD,KAAA,QAAK4C,SAAS,CAAC,KAAK,CAACI,KAAK,CAAE,CAAEM,SAAS,CAAE,MAAO,CAAE,CAAAX,QAAA,eAC9C3C,KAAA,QAAK4C,SAAS,CAAC,8BAA8B,CAAAD,QAAA,eACzC7C,IAAA,QAAA6C,QAAA,CAAK,sCAAM,CAAK,CAAC,cACjB3C,KAAA,QAAA2C,QAAA,EAAMvC,KAAK,CAACmD,KAAK,CAAC,KAAG,EAAK,CAAC,EAC1B,CAAC,cACNvD,KAAA,QAAK4C,SAAS,CAAC,qCAAqC,CAAAD,QAAA,eAChD7C,IAAA,QAAA6C,QAAA,CAAK,gCAAK,CAAK,CAAC,cAChB3C,KAAA,QAAA2C,QAAA,EAAMvC,KAAK,CAACoD,cAAc,CAAC,cAAE,CAACpD,KAAK,CAACqD,IAAI,CAAC,QAAC,EAAK,CAAC,EAC/C,CAAC,cACNzD,KAAA,QAAK4C,SAAS,CAAC,qCAAqC,CAAAD,QAAA,eAChD7C,IAAA,QAAA6C,QAAA,CAAK,qEAAiB,CAAK,CAAC,cAC5B3C,KAAA,QAAA2C,QAAA,EAAM5B,UAAU,CAAC,EAAE,CAAC,QAAC,EAAK,CAAC,IAAC,EAC3B,CAAC,EACL,CAAC,EACL,CAAC,CACR,CAAC,CAEX,CACA,cAAe,CAAAZ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}